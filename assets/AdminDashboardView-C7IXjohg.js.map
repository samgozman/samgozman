{"version":3,"file":"AdminDashboardView-C7IXjohg.js","sources":["../../src/views/AdminDashboardView.vue"],"sourcesContent":["<script setup lang=\"ts\">\nimport { onMounted, ref } from 'vue'\nimport { RouterLink } from 'vue-router'\nimport HeaderMax from '@/components/elements/HeaderMax.vue'\nimport { BloggyApi, type PostListItem } from '@/services/BloggyApi'\nimport { StorageKeeper } from '@/services/StorageKeeper'\n\nwindow.document.title = 'Admin Dashboard | Sam Gozman'\n\nconst items = ref<PostListItem[]>([])\n\nonMounted(async () => await updatePosts())\n\nconst updatePosts = async () => {\n  const res = await BloggyApi.getPosts(1, 25)\n  if (!res.ok) {\n    console.error('Failed to fetch posts:', res)\n    return\n  }\n\n  items.value = res.posts\n}\n\nconst onPublish = async (slug: string) => {\n  const token = StorageKeeper.get<string>('token')\n  if (!token) {\n    console.error('No token found')\n    return\n  }\n\n  const res = await BloggyApi.sendPostToSubscribers(token, slug)\n  if (!res.ok) {\n    console.error('Failed to publish post:', res)\n    return\n  }\n\n  await updatePosts()\n}\n\nconst isValidDate = (dateString: string) => {\n  const date = new Date(dateString)\n  return !isNaN(date.getTime()) && dateString !== '0001-01-01T00:00:00Z'\n}\n</script>\n\n<template>\n  <HeaderMax value=\"Admin Dashboard.\" />\n  <div class=\"flex justify-end\">\n    <RouterLink\n      class=\"btn font-poppins font-semibold text-white btn-primary\"\n      :to=\"{ name: 'admin-new-post' }\"\n    >\n      Create new post\n    </RouterLink>\n  </div>\n  <div class=\"grid grid-cols-1 gap-y-2 my-4\">\n    <div\n      v-for=\"item in items\"\n      :key=\"item.slug\"\n      class=\"flex items-center justify-between p-2 bg-white rounded-md shadow-md\"\n    >\n      <div class=\"flex items-center\">\n        <div class=\"ml-4\">\n          <RouterLink\n            :to=\"{ name: 'blog-post', params: { slug: item.slug } }\"\n            class=\"text-lg font-semibold hover:underline\"\n          >\n            {{ item.title }}\n          </RouterLink>\n          <p class=\"text-sm text-gray-500\">{{ item.created_at }}</p>\n        </div>\n      </div>\n      <div class=\"flex items center gap-2\">\n        <button\n          class=\"btn\"\n          :disabled=\"isValidDate(item.sent_to_subscribers_at)\"\n          @click=\"() => onPublish(item.slug)\"\n        >\n          Send notifications\n        </button>\n        <RouterLink\n          class=\"btn text-white btn-primary\"\n          :to=\"{ name: 'admin-edit-post', params: { slug: item.slug } }\"\n        >\n          Edit\n        </RouterLink>\n      </div>\n    </div>\n  </div>\n</template>\n"],"names":["items","ref","onMounted","updatePosts","res","BloggyApi","onPublish","slug","token","StorageKeeper","isValidDate","dateString","date"],"mappings":"6ZAOA,OAAO,SAAS,MAAQ,+BAElB,MAAAA,EAAQC,EAAoB,CAAA,CAAE,EAE1BC,EAAA,SAAY,MAAMC,EAAA,CAAa,EAEzC,MAAMA,EAAc,SAAY,CAC9B,MAAMC,EAAM,MAAMC,EAAU,SAAS,EAAG,EAAE,EACtC,GAAA,CAACD,EAAI,GAAI,CACH,QAAA,MAAM,yBAA0BA,CAAG,EAC3C,MACF,CAEAJ,EAAM,MAAQI,EAAI,KAAA,EAGdE,EAAY,MAAOC,GAAiB,CAClC,MAAAC,EAAQC,EAAc,IAAY,OAAO,EAC/C,GAAI,CAACD,EAAO,CACV,QAAQ,MAAM,gBAAgB,EAC9B,MACF,CAEA,MAAMJ,EAAM,MAAMC,EAAU,sBAAsBG,EAAOD,CAAI,EACzD,GAAA,CAACH,EAAI,GAAI,CACH,QAAA,MAAM,0BAA2BA,CAAG,EAC5C,MACF,CAEA,MAAMD,EAAY,CAAA,EAGdO,EAAeC,GAAuB,CACpC,MAAAC,EAAO,IAAI,KAAKD,CAAU,EAChC,MAAO,CAAC,MAAMC,EAAK,QAAQ,CAAC,GAAKD,IAAe,sBAAA"}